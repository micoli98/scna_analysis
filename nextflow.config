params {
  bk_bed = "/mnt/storageBig8/work/micoli/pipeline/Common_data/merged_blacklist.bed"
  pon_breakend = "/mnt/storageBig8/work/micoli/pipeline/Common_data/hmf_pipeline_resources.38_v5.31/gridss_pon_single_breakend.38.bed"
  pon_breakpoint = "/mnt/storageBig8/work/micoli/pipeline/Common_data/hmf_pipeline_resources.38_v5.31/gridss_pon_breakpoint.38.bedpe"
  ensembl_dir = "/mnt/storageBig8/work/micoli/pipeline/Common_data/hmf_pipeline_resources.38_v5.31/common/ensembl_data"
  somatic_data = "/mnt/storageBig8/web-pub/projects/HERCULES/WGS/variants_allMatched/variants_v4.2/byPatient_VCFs"
  germline_data = "/mnt/storageBig8/resources/processed_data/HERCULES/WGS_germline_variants/archive/220825/patient_VCFs"
  ref_genome_fa = "/mnt/csc-gc8/resources/references_annotations/reference_genomes/GRCh38d1vd1/GRCh38.d1.vd1.fa"
  loci_path = '/mnt/storageBig8/resources/processed_data/HERCULES/WGS_germline_variants/archive/220825/patient_biallelic_het_VCFs'
  gc_profile = '/mnt/storageBig8/work/micoli/pipeline/Common_data/GC_profile.1000bp.38.cnp'
  make_input = "/mnt/storageBig8/work/micoli/pipeline/Scripts_Dependencies/Prepare_input.R"
  multiploidy = "/mnt/storageBig8/work/micoli/pipeline/Scripts_Dependencies/multiploidy.R"
  segs_sunrises = "/mnt/storageBig8/work/micoli/pipeline/Scripts_Dependencies/segments_sunrises.R"
  cnGenes = "/mnt/storageBig8/work/micoli/pipeline/Scripts_Dependencies/cnGenes_HMF.R"
  genes = "/mnt/storageBig8/work/klavikka/HERCULES/gatk_ascat/resources/ensembl_genes_v96.csv"
  driver_gene_panel = "/mnt/storageBig8/work/micoli/pipeline/Common_data/hmf_pipeline_resources.38_v5.31/common/DriverGenePanel.38.tsv"
  germline_hotspots = "/mnt/storageBig8/work/micoli/pipeline/Common_data/hmf_pipeline_resources.38_v5.31/variants/KnownHotspots.germline.38.vcf.gz"
  somatic_hotspots = "/mnt/storageBig8/work/micoli/pipeline/Common_data/hmf_pipeline_resources.38_v5.31/variants/KnownHotspots.somatic.38.vcf.gz"
}

executor {
  name = 'slurm'
  queueSize = 60
}

process {
  executor = 'slurm'
  errorStrategy = 'ignore'
}

trace {
    enabled = true
    file = 'pipeline_trace.txt'
    fields = 'task_id,name,status,exit,realtime,%cpu,rss'
}